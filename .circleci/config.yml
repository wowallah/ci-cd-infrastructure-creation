# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs

commands:

  # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name udacity-ansible-${CIRCLE_WORKFLOW_ID:0:7}
          
jobs:
 
  # Exercise: Infrastructure Creation
  # Exercise - Rollback
  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name udacity-ansible-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1
      - destroy_environment


  # Exercise: Config and Deployment
  configure_infrastructure: 
    docker:
      - image: python:3.11-rc-alpine
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["1d:a3:cf:a7:e1:b0:33:cd:c9:7b:96:a0:55:70:43:10"] # You can get this ID in the section where you registered the SSH Key
      - run:
          name: Install dependencies
          command: |
            # install the dependencies needed for your playbook
            apk add --update ansible 
      - run:
          name: Configure server
          command: |
            ansible-playbook -i inventory main.yml  

  # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      # - run: apk add --update curl
      # - run:
      #     name: smoke test
      #     command: |
      #       URL="https://blog.udacity.com/"
      #       # Test if website exists
      #       if curl -s --head ${URL} 
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi
      - run:
          name: Test job
          command: return 1
      - destroy_environment

workflows:
  # Name the workflow "welcome"
  my_workflow:
    # Run the welcome/run job in its own container
    jobs:
      # - welcome/run
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test

